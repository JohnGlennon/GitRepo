@model MVC.Models.ExternalLoginListViewModel
@using Microsoft.Owin.Security

<hr />
@{
  var loginProviders = Context.GetOwinContext().Authentication.GetExternalAuthenticationTypes();
  if (loginProviders.Count() == 0)
  {
    <div>
        <p>
            There are no external authentication services configured. See <a href="http://go.microsoft.com/fwlink/?LinkId=313242">this article</a>
            for details on setting up this ASP.NET application to support logging in via external services.
        </p>
    </div>
  }
  else
  {
      using (Html.BeginForm("ExternalLogin", "Account", new { ReturnUrl = Model.ReturnUrl }))
      {
    @Html.AntiForgeryToken()
    <div id="socialLoginList">
        <p>
            @foreach (AuthenticationDescription p in loginProviders)
            {
                if (p.AuthenticationType.ToString().Equals("Google"))
                {
                <button type="submit" class="btn btn-primary btn-algemene-layout btn-rood" id="@p.AuthenticationType" name="provider" value="@p.AuthenticationType" title="Log in using your @p.Caption account">@p.AuthenticationType</button>
                }
                else if (p.AuthenticationType.ToString().Equals("Twitter"))
                {
                <button type="submit" class="btn btn-primary btn-algemene-layout btn-groen" id="@p.AuthenticationType" name="provider" value="@p.AuthenticationType" title="Log in using your @p.Caption account">@p.AuthenticationType</button>
                }
                else
                {
                <button type="submit" class="btn btn-primary btn-algemene-layout btn-blauw" id="@p.AuthenticationType" name="provider" value="@p.AuthenticationType" title="Log in using your @p.Caption account">@p.AuthenticationType</button>
                }
            }
        </p>
    </div>
      }
  }
}